<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="841.4" y="197" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="844.42" y="207.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="110.1" y="197" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="113.10" y="207.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (11 samples, 1.10%)</title><rect x="1079.3" y="245" width="13.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1082.30" y="255.5" ></text>
</g>
<g >
<title>filename_lookup (2 samples, 0.20%)</title><rect x="882.6" y="197" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="885.63" y="207.5" ></text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="372.7" y="85" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="375.71" y="95.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (2 samples, 0.20%)</title><rect x="889.7" y="181" width="2.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="892.70" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="988.6" y="229" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="991.62" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.10%)</title><rect x="1022.8" y="213" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1025.77" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.10%)</title><rect x="1112.3" y="245" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1115.28" y="255.5" ></text>
</g>
<g >
<title>__fsnotify_parent (6 samples, 0.60%)</title><rect x="1031.0" y="213" width="7.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1034.02" y="223.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (3 samples, 0.30%)</title><rect x="875.6" y="197" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="878.57" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.10%)</title><rect x="1071.1" y="229" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1074.06" y="239.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="848.5" y="181" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="851.48" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="245.5" y="85" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="248.53" y="95.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="934.5" y="245" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="937.45" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (15 samples, 1.50%)</title><rect x="219.6" y="85" width="17.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="222.62" y="95.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (2 samples, 0.20%)</title><rect x="1107.6" y="213" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1110.56" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="1046.3" y="213" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1049.33" y="223.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="701.3" y="197" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="704.28" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.10%)</title><rect x="171.3" y="69" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="174.34" y="79.5" ></text>
</g>
<g >
<title>vfs_write (19 samples, 1.90%)</title><rect x="1028.7" y="229" width="22.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1031.66" y="239.5" >v..</text>
</g>
<g >
<title>do_open (1 samples, 0.10%)</title><rect x="1003.9" y="197" width="1.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1006.93" y="207.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (1 samples, 0.10%)</title><rect x="920.3" y="181" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="923.32" y="191.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.30%)</title><rect x="183.1" y="85" width="3.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="186.11" y="95.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="454.0" y="69" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="456.97" y="79.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="617.7" y="117" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="620.66" y="127.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (27 samples, 2.69%)</title><rect x="311.5" y="101" width="31.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="314.48" y="111.5" >po..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="293.8" y="101" width="14.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="296.81" y="111.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (1 samples, 0.10%)</title><rect x="1068.7" y="213" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1071.70" y="223.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (5 samples, 0.50%)</title><rect x="1011.0" y="229" width="5.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1014.00" y="239.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="265.5" y="53" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="268.55" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_openat (22 samples, 2.20%)</title><rect x="998.0" y="261" width="26.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1001.04" y="271.5" >_..</text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="529.3" y="149" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="532.34" y="159.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (2 samples, 0.20%)</title><rect x="892.1" y="197" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="895.06" y="207.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="578.8" y="149" width="7.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="581.80" y="159.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (3 samples, 0.30%)</title><rect x="450.4" y="69" width="3.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="453.44" y="79.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="971.0" y="213" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="973.96" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="172.5" y="101" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="175.51" y="111.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.10%)</title><rect x="461.0" y="69" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="464.04" y="79.5" ></text>
</g>
<g >
<title>__wake_up_common (6 samples, 0.60%)</title><rect x="30.0" y="213" width="7.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="33.02" y="223.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.10%)</title><rect x="1033.4" y="197" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1036.37" y="207.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (7 samples, 0.70%)</title><rect x="521.1" y="133" width="8.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="524.10" y="143.5" ></text>
</g>
<g >
<title>__get_task_ioprio (1 samples, 0.10%)</title><rect x="1038.1" y="213" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1041.08" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="743.7" y="197" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="746.67" y="207.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="1146.4" y="229" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1149.43" y="239.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.10%)</title><rect x="886.2" y="181" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="889.17" y="191.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="616.5" y="117" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="619.49" y="127.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (3 samples, 0.30%)</title><rect x="1018.1" y="213" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1021.06" y="223.5" ></text>
</g>
<g >
<title>fd_install (1 samples, 0.10%)</title><rect x="1009.8" y="229" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1012.82" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (683 samples, 68.16%)</title><rect x="61.8" y="245" width="804.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="64.82" y="255.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.60%)</title><rect x="1102.9" y="245" width="7.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1105.85" y="255.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.10%)</title><rect x="1075.8" y="213" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1078.77" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.10%)</title><rect x="968.6" y="197" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="971.60" y="207.5" ></text>
</g>
<g >
<title>expand_files (1 samples, 0.10%)</title><rect x="1015.7" y="197" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1018.71" y="207.5" ></text>
</g>
<g >
<title>path_init (1 samples, 0.10%)</title><rect x="1007.5" y="197" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1010.47" y="207.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1 samples, 0.10%)</title><rect x="921.5" y="181" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="924.50" y="191.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="936.8" y="229" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="939.81" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="989.8" y="229" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="992.80" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (31 samples, 3.09%)</title><rect x="430.4" y="133" width="36.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="433.42" y="143.5" >irq..</text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="850.8" y="181" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="853.84" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.20%)</title><rect x="149.0" y="101" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="151.96" y="111.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (4 samples, 0.40%)</title><rect x="1065.2" y="229" width="4.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1068.17" y="239.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="531.7" y="133" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="534.70" y="143.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="965.1" y="197" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="968.07" y="207.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (9 samples, 0.90%)</title><rect x="491.7" y="101" width="10.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="494.66" y="111.5" ></text>
</g>
<g >
<title>main (1 samples, 0.10%)</title><rect x="1145.2" y="229" width="1.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1148.25" y="239.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="290.3" y="85" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="293.28" y="95.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (5 samples, 0.50%)</title><rect x="1120.5" y="261" width="5.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1123.52" y="271.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (7 samples, 0.70%)</title><rect x="812.0" y="213" width="8.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="814.98" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="932.1" y="229" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="935.10" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.40%)</title><rect x="41.8" y="213" width="4.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="44.80" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.40%)</title><rect x="37.1" y="213" width="4.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="40.09" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.10%)</title><rect x="877.9" y="181" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="880.92" y="191.5" ></text>
</g>
<g >
<title>path_openat (7 samples, 0.70%)</title><rect x="1001.6" y="213" width="8.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1004.58" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (24 samples, 2.40%)</title><rect x="866.1" y="245" width="28.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="869.15" y="255.5" >_..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="750.7" y="213" width="14.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="753.74" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.10%)</title><rect x="1187.6" y="277" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1190.64" y="287.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="409.2" y="117" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="412.22" y="127.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.20%)</title><rect x="496.4" y="69" width="2.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="499.37" y="79.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1 samples, 0.10%)</title><rect x="925.0" y="181" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="928.03" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.40%)</title><rect x="822.6" y="229" width="4.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="825.57" y="239.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="557.6" y="117" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="560.60" y="127.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="488.1" y="85" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="491.12" y="95.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="1155.8" y="213" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.85" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (21 samples, 2.10%)</title><rect x="441.0" y="101" width="24.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="444.02" y="111.5" >r..</text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.10%)</title><rect x="161.9" y="85" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="164.92" y="95.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (3 samples, 0.30%)</title><rect x="178.4" y="101" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="181.40" y="111.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (3 samples, 0.30%)</title><rect x="174.9" y="101" width="3.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="177.87" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (987 samples, 98.50%)</title><rect x="11.2" y="277" width="1162.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="14.18" y="287.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="213.7" y="85" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="216.73" y="95.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="779.0" y="181" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="782.00" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (1 samples, 0.10%)</title><rect x="1078.1" y="213" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1081.12" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="465.7" y="117" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="468.75" y="127.5" ></text>
</g>
<g >
<title>__pte_offset_map (1 samples, 0.10%)</title><rect x="1108.7" y="197" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1111.74" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (16 samples, 1.60%)</title><rect x="894.4" y="245" width="18.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="897.41" y="255.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="267.9" y="37" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="270.90" y="47.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (24 samples, 2.40%)</title><rect x="711.9" y="181" width="28.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="714.88" y="191.5" >k..</text>
</g>
<g >
<title>putname (2 samples, 0.20%)</title><rect x="879.1" y="213" width="2.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="882.10" y="223.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="279.7" y="53" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="282.68" y="63.5" ></text>
</g>
<g >
<title>__monstartup (1 samples, 0.10%)</title><rect x="10.0" y="277" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="620.0" y="133" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="623.02" y="143.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.30%)</title><rect x="718.9" y="165" width="3.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="721.94" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="1173.5" y="277" width="14.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1176.51" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.10%)</title><rect x="463.4" y="69" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="466.39" y="79.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="834.4" y="213" width="21.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="837.35" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="310.3" y="85" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="313.30" y="95.5" ></text>
</g>
<g >
<title>ksys_write (22 samples, 2.20%)</title><rect x="1025.1" y="245" width="25.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1028.13" y="255.5" >k..</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="266.7" y="53" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="269.73" y="63.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (27 samples, 2.69%)</title><rect x="648.3" y="181" width="31.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="651.28" y="191.5" >po..</text>
</g>
<g >
<title>__wake_up (21 samples, 2.10%)</title><rect x="71.2" y="213" width="24.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="74.24" y="223.5" >_..</text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="1109.9" y="245" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1112.92" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="1013.4" y="197" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1016.35" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="1014.5" y="197" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1017.53" y="207.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="244.4" y="85" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="247.35" y="95.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.10%)</title><rect x="1121.7" y="245" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1124.70" y="255.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.10%)</title><rect x="169.0" y="69" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="171.98" y="79.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="724.8" y="149" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="727.83" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (41 samples, 4.09%)</title><rect x="1051.0" y="261" width="48.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1054.04" y="271.5" >exit..</text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="377.4" y="101" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="380.43" y="111.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="445.7" y="85" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="448.73" y="95.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14 samples, 1.40%)</title><rect x="803.7" y="229" width="16.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="806.73" y="239.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (35 samples, 3.49%)</title><rect x="364.5" y="117" width="41.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="367.47" y="127.5" >pos..</text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.30%)</title><rect x="495.2" y="85" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="498.19" y="95.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="556.4" y="101" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="559.43" y="111.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.10%)</title><rect x="1034.6" y="197" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1037.55" y="207.5" ></text>
</g>
<g >
<title>__count_memcg_events (2 samples, 0.20%)</title><rect x="914.4" y="229" width="2.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="917.43" y="239.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (24 samples, 2.40%)</title><rect x="18.2" y="261" width="28.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.24" y="271.5" >_..</text>
</g>
<g >
<title>rcu_accelerate_cbs (1 samples, 0.10%)</title><rect x="437.5" y="69" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="440.49" y="79.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="967.4" y="197" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="970.43" y="207.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="339.7" y="85" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="342.74" y="95.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="680.1" y="181" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="683.08" y="191.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="278.5" y="37" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="281.50" y="47.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (9 samples, 0.90%)</title><rect x="223.2" y="69" width="10.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="226.15" y="79.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.20%)</title><rect x="1040.4" y="197" width="2.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1043.44" y="207.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="564.7" y="149" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="567.67" y="159.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="396.3" y="69" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="399.27" y="79.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6 samples, 0.60%)</title><rect x="237.3" y="85" width="7.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="240.29" y="95.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.10%)</title><rect x="941.5" y="229" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="944.52" y="239.5" ></text>
</g>
<g >
<title>security_inode_getattr (3 samples, 0.30%)</title><rect x="888.5" y="197" width="3.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="891.52" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="723.7" y="165" width="2.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="726.65" y="175.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (24 samples, 2.40%)</title><rect x="474.0" y="117" width="28.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="476.99" y="127.5" >k..</text>
</g>
<g >
<title>__fput (1 samples, 0.10%)</title><rect x="1074.6" y="197" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1077.59" y="207.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.10%)</title><rect x="436.3" y="69" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="439.31" y="79.5" ></text>
</g>
<g >
<title>locks_remove_posix (1 samples, 0.10%)</title><rect x="995.7" y="213" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="998.69" y="223.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (30 samples, 2.99%)</title><rect x="942.7" y="245" width="35.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="945.69" y="255.5" >po..</text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="796.7" y="213" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="799.67" y="223.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (23 samples, 2.30%)</title><rect x="68.9" y="229" width="27.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="71.88" y="239.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="499.9" y="85" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="502.90" y="95.5" ></text>
</g>
<g >
<title>take_dentry_name_snapshot (1 samples, 0.10%)</title><rect x="1036.9" y="197" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1039.91" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="59.5" y="213" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="62.46" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (18 samples, 1.80%)</title><rect x="25.3" y="229" width="21.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="28.31" y="239.5" ></text>
</g>
<g >
<title>rcu_core (6 samples, 0.60%)</title><rect x="434.0" y="85" width="7.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="436.95" y="95.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.20%)</title><rect x="720.1" y="149" width="2.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="723.12" y="159.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="602.4" y="149" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="605.36" y="159.5" ></text>
</g>
<g >
<title>putname (2 samples, 0.20%)</title><rect x="1021.6" y="229" width="2.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1024.60" y="239.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="489.3" y="85" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="492.30" y="95.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="388.0" y="85" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="391.02" y="95.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (1 samples, 0.10%)</title><rect x="922.7" y="181" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="925.67" y="191.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="683.6" y="181" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="686.61" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (550 samples, 54.89%)</title><rect x="103.0" y="213" width="647.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="106.03" y="223.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>update_blocked_averages (7 samples, 0.70%)</title><rect x="457.5" y="85" width="8.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="460.50" y="95.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (7 samples, 0.70%)</title><rect x="421.0" y="117" width="8.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="424.00" y="127.5" ></text>
</g>
<g >
<title>do_read_fault (1 samples, 0.10%)</title><rect x="1106.4" y="197" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1109.39" y="207.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="601.2" y="133" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="604.18" y="143.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="655.3" y="165" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="658.35" y="175.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="734.3" y="149" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="737.25" y="159.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="300.9" y="85" width="7.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="303.88" y="95.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (31 samples, 3.09%)</title><rect x="1129.9" y="261" width="36.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1132.94" y="271.5" >pos..</text>
</g>
<g >
<title>exit_to_user_mode_loop (13 samples, 1.30%)</title><rect x="1064.0" y="245" width="15.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1066.99" y="255.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (27 samples, 2.69%)</title><rect x="827.3" y="229" width="31.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="830.29" y="239.5" >po..</text>
</g>
<g >
<title>__wake_up_common_lock (9 samples, 0.90%)</title><rect x="140.7" y="117" width="10.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="143.72" y="127.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="490.5" y="85" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="493.48" y="95.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="286.7" y="85" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="289.75" y="95.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="530.5" y="149" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="533.52" y="159.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.10%)</title><rect x="462.2" y="69" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="465.22" y="79.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.30%)</title><rect x="1039.3" y="213" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1042.26" y="223.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="966.2" y="197" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="969.25" y="207.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.10%)</title><rect x="464.6" y="69" width="1.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="467.57" y="79.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="53.6" y="245" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="56.57" y="255.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="609.4" y="133" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="612.42" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (23 samples, 2.30%)</title><rect x="1024.0" y="261" width="27.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1026.95" y="271.5" >_..</text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="307.9" y="101" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="310.94" y="111.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="852.0" y="197" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="855.02" y="207.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="539.9" y="133" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="542.94" y="143.5" ></text>
</g>
<g >
<title>vfs_fstatat (18 samples, 1.80%)</title><rect x="873.2" y="229" width="21.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="876.21" y="239.5" ></text>
</g>
<g >
<title>handle_pte_fault (5 samples, 0.50%)</title><rect x="1104.0" y="229" width="5.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1107.03" y="239.5" ></text>
</g>
<g >
<title>__wake_up (11 samples, 1.10%)</title><rect x="138.4" y="133" width="12.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="141.36" y="143.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="379.8" y="85" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="382.78" y="95.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.10%)</title><rect x="165.4" y="85" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="168.45" y="95.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="662.4" y="149" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="665.42" y="159.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.20%)</title><rect x="263.2" y="37" width="2.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="266.19" y="47.5" ></text>
</g>
<g >
<title>getname_flags (4 samples, 0.40%)</title><rect x="874.4" y="213" width="4.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="877.39" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="1128.8" y="245" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1131.76" y="255.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="509.3" y="133" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="512.32" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (375 samples, 37.43%)</title><rect x="130.1" y="165" width="441.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="133.12" y="175.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>read_hpet (2 samples, 0.20%)</title><rect x="179.6" y="85" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="182.58" y="95.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="200.8" y="101" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="203.78" y="111.5" ></text>
</g>
<g >
<title>release_dentry_name_snapshot (1 samples, 0.10%)</title><rect x="1035.7" y="197" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1038.73" y="207.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="787.2" y="165" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="790.25" y="175.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (27 samples, 2.69%)</title><rect x="764.9" y="213" width="31.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="767.87" y="223.5" >po..</text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="202.0" y="85" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="204.96" y="95.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="448.1" y="69" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="451.08" y="79.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (2 samples, 0.20%)</title><rect x="1066.3" y="213" width="2.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1069.35" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="600.0" y="149" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="603.00" y="159.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="1047.5" y="197" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1050.50" y="207.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="502.3" y="117" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="505.26" y="127.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="455.1" y="69" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="458.15" y="79.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="596.5" y="117" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="599.47" y="127.5" ></text>
</g>
<g >
<title>tick_program_event (4 samples, 0.40%)</title><rect x="181.9" y="101" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="184.94" y="111.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="630.6" y="165" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="633.62" y="175.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.10%)</title><rect x="1002.8" y="197" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1005.75" y="207.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (6 samples, 0.60%)</title><rect x="226.7" y="53" width="7.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="229.69" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (74 samples, 7.39%)</title><rect x="206.7" y="101" width="87.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="209.67" y="111.5" >__x64_sys_..</text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="1111.1" y="245" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1114.10" y="255.5" ></text>
</g>
<g >
<title>do_filp_open (8 samples, 0.80%)</title><rect x="1000.4" y="229" width="9.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1003.40" y="239.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (1 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1191.82" y="287.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="793.1" y="197" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="796.13" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="350.3" y="117" width="14.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="353.34" y="127.5" ></text>
</g>
<g >
<title>ext4_file_getattr (1 samples, 0.10%)</title><rect x="893.2" y="181" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="896.23" y="191.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (1 samples, 0.10%)</title><rect x="1069.9" y="229" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1072.88" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="309.1" y="101" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="312.12" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (434 samples, 43.31%)</title><rect x="123.1" y="181" width="511.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="126.05" y="191.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>find_vma (3 samples, 0.30%)</title><rect x="1122.9" y="245" width="3.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1125.87" y="255.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.10%)</title><rect x="869.7" y="197" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="872.68" y="207.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.20%)</title><rect x="820.2" y="229" width="2.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="823.22" y="239.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.10%)</title><rect x="1006.3" y="197" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1009.29" y="207.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1 samples, 0.10%)</title><rect x="927.4" y="181" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="930.39" y="191.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="733.1" y="149" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="736.07" y="159.5" ></text>
</g>
<g >
<title>getname (4 samples, 0.40%)</title><rect x="1016.9" y="229" width="4.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1019.89" y="239.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="849.7" y="181" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="852.66" y="191.5" ></text>
</g>
<g >
<title>path_put (3 samples, 0.30%)</title><rect x="885.0" y="197" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="887.99" y="207.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="277.3" y="37" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="280.33" y="47.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.10%)</title><rect x="1019.2" y="197" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1022.24" y="207.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (27 samples, 2.69%)</title><rect x="532.9" y="149" width="31.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="535.87" y="159.5" >po..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="435.1" y="69" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="438.13" y="79.5" ></text>
</g>
<g >
<title>do_anonymous_page (8 samples, 0.80%)</title><rect x="919.1" y="197" width="9.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="922.14" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (601 samples, 59.98%)</title><rect x="96.0" y="229" width="707.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="98.97" y="239.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="687.1" y="197" width="14.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="690.15" y="207.5" ></text>
</g>
<g >
<title>task_work_run (6 samples, 0.60%)</title><rect x="1072.2" y="229" width="7.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1075.24" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="173.7" y="101" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="176.69" y="111.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="771.9" y="197" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="774.94" y="207.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="670.7" y="133" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="673.66" y="143.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="978.0" y="245" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="981.02" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="1125.2" y="229" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1128.23" y="239.5" ></text>
</g>
<g >
<title>dnotify_flush (1 samples, 0.10%)</title><rect x="992.2" y="213" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="995.16" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (798 samples, 79.64%)</title><rect x="46.5" y="261" width="939.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="49.51" y="271.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>__x64_sys_close (10 samples, 1.00%)</title><rect x="986.3" y="261" width="11.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="989.27" y="271.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="332.7" y="53" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="335.67" y="63.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="1160.6" y="245" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1163.56" y="255.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.20%)</title><rect x="1042.8" y="213" width="2.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1045.79" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="940.3" y="229" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="943.34" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="571.7" y="165" width="14.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="574.74" y="175.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.10%)</title><rect x="170.2" y="69" width="1.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="173.16" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (23 samples, 2.30%)</title><rect x="159.6" y="117" width="27.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="162.56" y="127.5" >h..</text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="859.1" y="229" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="862.08" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.40%)</title><rect x="1115.8" y="261" width="4.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1118.81" y="271.5" ></text>
</g>
<g >
<title>from_kuid_munged (2 samples, 0.20%)</title><rect x="870.9" y="213" width="2.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="873.86" y="223.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="981.6" y="245" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="984.56" y="255.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="671.8" y="133" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="674.84" y="143.5" ></text>
</g>
<g >
<title>switch_fpu_return (6 samples, 0.60%)</title><rect x="1092.3" y="245" width="7.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1095.26" y="255.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="429.2" y="133" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="432.24" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.10%)</title><rect x="163.1" y="85" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="166.09" y="95.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="641.2" y="165" width="7.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="644.22" y="175.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.10%)</title><rect x="1027.5" y="213" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1030.49" y="223.5" ></text>
</g>
<g >
<title>__pte_offset_map (1 samples, 0.10%)</title><rect x="929.7" y="181" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="932.74" y="191.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (35 samples, 3.49%)</title><rect x="585.9" y="165" width="41.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="588.87" y="175.5" >pos..</text>
</g>
<g >
<title>folio_add_new_anon_rmap (1 samples, 0.10%)</title><rect x="926.2" y="181" width="1.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="929.21" y="191.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="381.0" y="101" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="383.96" y="111.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="598.8" y="149" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="601.82" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="939.2" y="229" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="942.16" y="239.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="694.2" y="181" width="7.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="697.21" y="191.5" ></text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="111.3" y="181" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="114.28" y="191.5" ></text>
</g>
<g >
<title>hrtimer_forward (1 samples, 0.10%)</title><rect x="167.8" y="69" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="170.80" y="79.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.50%)</title><rect x="80.7" y="181" width="5.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="83.66" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.10%)</title><rect x="1029.8" y="213" width="1.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1032.84" y="223.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.10%)</title><rect x="887.3" y="181" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="890.35" y="191.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="55.9" y="245" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="58.93" y="255.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="555.2" y="101" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="558.25" y="111.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="862.6" y="229" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="865.61" y="239.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="458.7" y="69" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="461.68" y="79.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="757.8" y="197" width="7.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="760.80" y="207.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="346.8" y="101" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="349.81" y="111.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="627.1" y="165" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="630.09" y="175.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.10%)</title><rect x="915.6" y="213" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="918.61" y="223.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (3 samples, 0.30%)</title><rect x="1126.4" y="261" width="3.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1129.41" y="271.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.10%)</title><rect x="145.4" y="85" width="1.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="148.43" y="95.5" ></text>
</g>
<g >
<title>rebalance_domains (7 samples, 0.70%)</title><rect x="449.3" y="85" width="8.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="452.26" y="95.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="1172.3" y="261" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1175.34" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="164.3" y="85" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="167.27" y="95.5" ></text>
</g>
<g >
<title>rcu_core_si (7 samples, 0.70%)</title><rect x="432.8" y="101" width="8.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="435.77" y="111.5" ></text>
</g>
<g >
<title>fopen (1 samples, 0.10%)</title><rect x="1154.7" y="213" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1157.67" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.10%)</title><rect x="1020.4" y="197" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1023.42" y="207.5" ></text>
</g>
<g >
<title>alloc_fd (4 samples, 0.40%)</title><rect x="1012.2" y="213" width="4.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1015.18" y="223.5" ></text>
</g>
<g >
<title>____fput (2 samples, 0.20%)</title><rect x="1073.4" y="213" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1076.41" y="223.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="398.6" y="85" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="401.62" y="95.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="561.1" y="133" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="564.14" y="143.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.30%)</title><rect x="262.0" y="53" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="265.02" y="63.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (4 samples, 0.40%)</title><rect x="1094.6" y="229" width="4.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1097.61" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.10%)</title><rect x="880.3" y="197" width="1.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="883.28" y="207.5" ></text>
</g>
<g >
<title>from_kgid_munged (2 samples, 0.20%)</title><rect x="868.5" y="213" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="871.50" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 1.20%)</title><rect x="916.8" y="229" width="14.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="919.79" y="239.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="969.8" y="197" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="972.78" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="930.9" y="229" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="933.92" y="239.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="113.6" y="165" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="116.63" y="175.5" ></text>
</g>
<g >
<title>do_sys_openat2 (21 samples, 2.10%)</title><rect x="999.2" y="245" width="24.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1002.22" y="255.5" >d..</text>
</g>
<g >
<title>__x64_sys_clock_gettime (307 samples, 30.64%)</title><rect x="151.3" y="149" width="361.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="154.32" y="159.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="57.1" y="229" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="60.11" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="702.5" y="197" width="2.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="705.46" y="207.5" ></text>
</g>
<g >
<title>vfs_statx (11 samples, 1.10%)</title><rect x="881.5" y="213" width="12.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="884.46" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.30%)</title><rect x="143.1" y="101" width="3.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="146.07" y="111.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3 samples, 0.30%)</title><rect x="240.8" y="69" width="3.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="243.82" y="79.5" ></text>
</g>
<g >
<title>rcu_segcblist_ready_cbs (1 samples, 0.10%)</title><rect x="439.8" y="69" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="442.84" y="79.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.20%)</title><rect x="1118.2" y="245" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1121.16" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.10%)</title><rect x="876.7" y="181" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="879.75" y="191.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="735.4" y="149" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="738.43" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="1124.1" y="229" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1127.05" y="239.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="1045.1" y="213" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1048.15" y="223.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="736.6" y="165" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="739.61" y="175.5" ></text>
</g>
<g >
<title>fputs (1 samples, 0.10%)</title><rect x="333.9" y="53" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="336.85" y="63.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.10%)</title><rect x="872.0" y="197" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="875.04" y="207.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="498.7" y="85" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="501.72" y="95.5" ></text>
</g>
<g >
<title>pollwake (2 samples, 0.20%)</title><rect x="34.7" y="197" width="2.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="37.73" y="207.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="357.4" y="101" width="7.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="360.41" y="111.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="547.0" y="117" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="550.01" y="127.5" ></text>
</g>
<g >
<title>all (1,002 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>put_timespec64 (5 samples, 0.50%)</title><rect x="1166.4" y="261" width="5.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1169.45" y="271.5" ></text>
</g>
<g >
<title>lapic_next_event (1 samples, 0.10%)</title><rect x="185.5" y="69" width="1.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="188.47" y="79.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (33 samples, 3.29%)</title><rect x="466.9" y="133" width="38.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="469.93" y="143.5" >pos..</text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="204.3" y="69" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="207.31" y="79.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="54.8" y="245" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="57.75" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14 samples, 1.40%)</title><rect x="512.9" y="149" width="16.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="515.85" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10 samples, 1.00%)</title><rect x="160.7" y="101" width="11.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="163.74" y="111.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="217.3" y="53" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="220.27" y="63.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="722.5" y="165" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="725.48" y="175.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="592.9" y="149" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="595.93" y="159.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (33 samples, 3.29%)</title><rect x="704.8" y="197" width="38.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="707.81" y="207.5" >pos..</text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="568.2" y="149" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="571.20" y="159.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="786.1" y="165" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="789.07" y="175.5" ></text>
</g>
<g >
<title>dget_parent (1 samples, 0.10%)</title><rect x="1032.2" y="197" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1035.20" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (485 samples, 48.40%)</title><rect x="116.0" y="197" width="571.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="118.99" y="207.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="343.3" y="101" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="346.27" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.40%)</title><rect x="91.3" y="181" width="4.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="94.26" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.10%)</title><rect x="933.3" y="229" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="936.27" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14 samples, 1.40%)</title><rect x="412.8" y="133" width="16.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="415.75" y="143.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="623.6" y="149" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="626.55" y="159.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="395.1" y="69" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="398.09" y="79.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (2 samples, 0.20%)</title><rect x="928.6" y="197" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="931.56" y="207.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.20%)</title><rect x="993.3" y="213" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="996.33" y="223.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.20%)</title><rect x="1026.3" y="229" width="2.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1029.31" y="239.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="335.0" y="53" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="338.03" y="63.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 1.20%)</title><rect x="634.2" y="181" width="14.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="637.15" y="191.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="276.1" y="37" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="279.15" y="47.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.20%)</title><rect x="1105.2" y="213" width="2.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1108.21" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="405.7" y="117" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="408.69" y="127.5" ></text>
</g>
<g >
<title>cp_new_stat (5 samples, 0.50%)</title><rect x="867.3" y="229" width="5.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="870.33" y="239.5" ></text>
</g>
<g >
<title>close_fd (9 samples, 0.90%)</title><rect x="987.4" y="245" width="10.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="990.45" y="255.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.20%)</title><rect x="1113.5" y="261" width="2.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1116.45" y="271.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.10%)</title><rect x="438.7" y="69" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="441.66" y="79.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="669.5" y="133" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="672.48" y="143.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="789.6" y="181" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="792.60" y="191.5" ></text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="594.1" y="133" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="597.11" y="143.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (12 samples, 1.20%)</title><rect x="137.2" y="149" width="14.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="140.19" y="159.5" ></text>
</g>
<g >
<title>__cxa_atexit (1 samples, 0.10%)</title><rect x="1144.1" y="229" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1147.07" y="239.5" ></text>
</g>
<g >
<title>fclose (1 samples, 0.10%)</title><rect x="1153.5" y="213" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1156.49" y="223.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="673.0" y="149" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="676.01" y="159.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="985.1" y="245" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="988.09" y="255.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.20%)</title><rect x="1048.7" y="213" width="2.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1051.68" y="223.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1 samples, 0.10%)</title><rect x="1005.1" y="197" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1008.11" y="207.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.10%)</title><rect x="994.5" y="197" width="1.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="997.51" y="207.5" ></text>
</g>
<g >
<title>filp_close (5 samples, 0.50%)</title><rect x="991.0" y="229" width="5.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="993.98" y="239.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.10%)</title><rect x="85.4" y="165" width="1.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="88.37" y="175.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="505.8" y="133" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="508.79" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (24 samples, 2.40%)</title><rect x="158.4" y="133" width="28.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="161.38" y="143.5" >_..</text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="676.5" y="165" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="679.55" y="175.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="501.1" y="69" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="504.08" y="79.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="246.7" y="69" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="249.71" y="79.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1 samples, 0.10%)</title><rect x="459.9" y="69" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="462.86" y="79.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="703.6" y="181" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="706.63" y="191.5" ></text>
</g>
<g >
<title>fprintf (1 samples, 0.10%)</title><rect x="554.1" y="101" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="557.07" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.40%)</title><rect x="86.5" y="181" width="4.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="89.55" y="191.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="397.4" y="69" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="400.45" y="79.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (21 samples, 2.10%)</title><rect x="949.8" y="229" width="24.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="952.76" y="239.5" >k..</text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="283.2" y="69" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="286.21" y="79.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="747.2" y="197" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="750.21" y="207.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="269.1" y="53" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="272.08" y="63.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.20%)</title><rect x="824.9" y="213" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="827.93" y="223.5" ></text>
</g>
<g >
<title>xfd_validate_state (2 samples, 0.20%)</title><rect x="1097.0" y="213" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1099.97" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (5 samples, 0.50%)</title><rect x="166.6" y="85" width="5.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="169.63" y="95.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.30%)</title><rect x="442.2" y="85" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="445.20" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.10%)</title><rect x="1076.9" y="213" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1079.95" y="223.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.10%)</title><rect x="456.3" y="69" width="1.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="459.33" y="79.5" ></text>
</g>
<g >
<title>path_lookupat (1 samples, 0.10%)</title><rect x="883.8" y="181" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="886.81" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="923.9" y="181" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="926.85" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="935.6" y="245" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="938.63" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.20%)</title><rect x="146.6" y="101" width="2.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="149.61" y="111.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (8 samples, 0.80%)</title><rect x="903.8" y="229" width="9.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="906.83" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (133 samples, 13.27%)</title><rect x="193.7" y="117" width="156.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="196.71" y="127.5" >__x64_sys_clock_gett..</text>
</g>
<g >
<title>handle_pte_fault (11 samples, 1.10%)</title><rect x="918.0" y="213" width="12.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="920.96" y="223.5" ></text>
</g>
<g >
<title>__do_softirq (29 samples, 2.89%)</title><rect x="431.6" y="117" width="34.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="434.60" y="127.5" >__..</text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="336.2" y="69" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="339.21" y="79.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="740.1" y="181" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="743.14" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (192 samples, 19.16%)</title><rect x="186.6" y="133" width="226.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="189.65" y="143.5" >__x64_sys_clock_gettime</text>
</g>
<g >
<title>__wake_up_common_lock (17 samples, 1.70%)</title><rect x="75.9" y="197" width="20.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="78.95" y="207.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (33 samples, 3.29%)</title><rect x="247.9" y="85" width="38.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="250.88" y="95.5" >pos..</text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="233.8" y="69" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="236.75" y="79.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.10%)</title><rect x="1044.0" y="197" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1046.97" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 1.80%)</title><rect x="913.3" y="245" width="21.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="916.25" y="255.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="618.8" y="117" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="621.84" y="127.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="974.5" y="229" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="977.49" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 1.20%)</title><rect x="1099.3" y="261" width="14.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1102.32" y="271.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="800.2" y="213" width="3.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="803.20" y="223.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6 samples, 0.60%)</title><rect x="1180.6" y="261" width="7.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1183.58" y="271.5" ></text>
</g>
<g >
<title>__count_memcg_events (2 samples, 0.20%)</title><rect x="1100.5" y="245" width="2.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1103.50" y="255.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="726.0" y="165" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="729.01" y="175.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (1 samples, 0.10%)</title><rect x="963.9" y="197" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="966.89" y="207.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (18 samples, 1.80%)</title><rect x="318.5" y="85" width="21.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="321.54" y="95.5" ></text>
</g>
<g >
<title>read_hpet (12 samples, 1.20%)</title><rect x="956.8" y="213" width="14.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="959.83" y="223.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (1 samples, 0.10%)</title><rect x="1067.5" y="197" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1070.52" y="207.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (24 samples, 2.40%)</title><rect x="255.0" y="69" width="28.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="257.95" y="79.5" >k..</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="446.9" y="85" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="449.91" y="95.5" ></text>
</g>
<g >
<title>pick_file (1 samples, 0.10%)</title><rect x="996.9" y="229" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="999.87" y="239.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="402.2" y="101" width="3.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="405.16" y="111.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="481.1" y="101" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="484.06" y="111.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (3 samples, 0.30%)</title><rect x="1157.0" y="229" width="3.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1160.03" y="239.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (2 samples, 0.20%)</title><rect x="1164.1" y="245" width="2.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1167.09" y="255.5" ></text>
</g>
<g >
<title>__wake_up (22 samples, 2.20%)</title><rect x="20.6" y="245" width="25.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="23.60" y="255.5" >_..</text>
</g>
<g >
<title>__wake_up (4 samples, 0.40%)</title><rect x="214.9" y="69" width="4.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="217.91" y="79.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (20 samples, 2.00%)</title><rect x="1137.0" y="245" width="23.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1140.01" y="255.5" >k..</text>
</g>
<g >
<title>ktime_get (1 samples, 0.10%)</title><rect x="184.3" y="69" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="187.29" y="79.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.20%)</title><rect x="443.4" y="69" width="2.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="446.37" y="79.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.20%)</title><rect x="176.0" y="85" width="2.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="179.05" y="95.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (5 samples, 0.50%)</title><rect x="371.5" y="101" width="5.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="374.54" y="111.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="1127.6" y="245" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1130.58" y="255.5" ></text>
</g>
<g >
<title>read_hpet (9 samples, 0.90%)</title><rect x="325.6" y="69" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="328.61" y="79.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.10%)</title><rect x="1101.7" y="229" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1104.68" y="239.5" ></text>
</g>
<g >
<title>terminate_walk (1 samples, 0.10%)</title><rect x="1008.6" y="197" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1011.64" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="378.6" y="101" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="381.60" y="111.5" ></text>
</g>
<g >
<title>put_timespec64 (3 samples, 0.30%)</title><rect x="855.5" y="213" width="3.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="858.55" y="223.5" ></text>
</g>
<g >
<title>read_hpet (3 samples, 0.30%)</title><rect x="230.2" y="37" width="3.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="233.22" y="47.5" ></text>
</g>
<g >
<title>rcall (1 samples, 0.10%)</title><rect x="788.4" y="165" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="791.42" y="175.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.20%)</title><rect x="375.1" y="69" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="378.07" y="79.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (4 samples, 0.40%)</title><rect x="938.0" y="245" width="4.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="940.98" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.10%)</title><rect x="1049.9" y="197" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1052.86" y="207.5" ></text>
</g>
</g>
</svg>
